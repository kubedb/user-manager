/*
Copyright 2018 The Attic Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubedb/user-manager/apis/authorization/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MongodbRoleBindingLister helps list MongodbRoleBindings.
type MongodbRoleBindingLister interface {
	// List lists all MongodbRoleBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MongodbRoleBinding, err error)
	// MongodbRoleBindings returns an object that can list and get MongodbRoleBindings.
	MongodbRoleBindings(namespace string) MongodbRoleBindingNamespaceLister
	MongodbRoleBindingListerExpansion
}

// mongodbRoleBindingLister implements the MongodbRoleBindingLister interface.
type mongodbRoleBindingLister struct {
	indexer cache.Indexer
}

// NewMongodbRoleBindingLister returns a new MongodbRoleBindingLister.
func NewMongodbRoleBindingLister(indexer cache.Indexer) MongodbRoleBindingLister {
	return &mongodbRoleBindingLister{indexer: indexer}
}

// List lists all MongodbRoleBindings in the indexer.
func (s *mongodbRoleBindingLister) List(selector labels.Selector) (ret []*v1alpha1.MongodbRoleBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongodbRoleBinding))
	})
	return ret, err
}

// MongodbRoleBindings returns an object that can list and get MongodbRoleBindings.
func (s *mongodbRoleBindingLister) MongodbRoleBindings(namespace string) MongodbRoleBindingNamespaceLister {
	return mongodbRoleBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MongodbRoleBindingNamespaceLister helps list and get MongodbRoleBindings.
type MongodbRoleBindingNamespaceLister interface {
	// List lists all MongodbRoleBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MongodbRoleBinding, err error)
	// Get retrieves the MongodbRoleBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MongodbRoleBinding, error)
	MongodbRoleBindingNamespaceListerExpansion
}

// mongodbRoleBindingNamespaceLister implements the MongodbRoleBindingNamespaceLister
// interface.
type mongodbRoleBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MongodbRoleBindings in the indexer for a given namespace.
func (s mongodbRoleBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MongodbRoleBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MongodbRoleBinding))
	})
	return ret, err
}

// Get retrieves the MongodbRoleBinding from the indexer for a given namespace and name.
func (s mongodbRoleBindingNamespaceLister) Get(name string) (*v1alpha1.MongodbRoleBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mongodbrolebinding"), name)
	}
	return obj.(*v1alpha1.MongodbRoleBinding), nil
}
