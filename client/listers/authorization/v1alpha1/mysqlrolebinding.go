/*
Copyright 2018 The Attic Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubedb/user-manager/apis/authorization/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MysqlRoleBindingLister helps list MysqlRoleBindings.
type MysqlRoleBindingLister interface {
	// List lists all MysqlRoleBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MysqlRoleBinding, err error)
	// MysqlRoleBindings returns an object that can list and get MysqlRoleBindings.
	MysqlRoleBindings(namespace string) MysqlRoleBindingNamespaceLister
	MysqlRoleBindingListerExpansion
}

// mysqlRoleBindingLister implements the MysqlRoleBindingLister interface.
type mysqlRoleBindingLister struct {
	indexer cache.Indexer
}

// NewMysqlRoleBindingLister returns a new MysqlRoleBindingLister.
func NewMysqlRoleBindingLister(indexer cache.Indexer) MysqlRoleBindingLister {
	return &mysqlRoleBindingLister{indexer: indexer}
}

// List lists all MysqlRoleBindings in the indexer.
func (s *mysqlRoleBindingLister) List(selector labels.Selector) (ret []*v1alpha1.MysqlRoleBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MysqlRoleBinding))
	})
	return ret, err
}

// MysqlRoleBindings returns an object that can list and get MysqlRoleBindings.
func (s *mysqlRoleBindingLister) MysqlRoleBindings(namespace string) MysqlRoleBindingNamespaceLister {
	return mysqlRoleBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MysqlRoleBindingNamespaceLister helps list and get MysqlRoleBindings.
type MysqlRoleBindingNamespaceLister interface {
	// List lists all MysqlRoleBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MysqlRoleBinding, err error)
	// Get retrieves the MysqlRoleBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MysqlRoleBinding, error)
	MysqlRoleBindingNamespaceListerExpansion
}

// mysqlRoleBindingNamespaceLister implements the MysqlRoleBindingNamespaceLister
// interface.
type mysqlRoleBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MysqlRoleBindings in the indexer for a given namespace.
func (s mysqlRoleBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MysqlRoleBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MysqlRoleBinding))
	})
	return ret, err
}

// Get retrieves the MysqlRoleBinding from the indexer for a given namespace and name.
func (s mysqlRoleBindingNamespaceLister) Get(name string) (*v1alpha1.MysqlRoleBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("mysqlrolebinding"), name)
	}
	return obj.(*v1alpha1.MysqlRoleBinding), nil
}
